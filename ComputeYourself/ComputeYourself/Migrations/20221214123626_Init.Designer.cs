// <auto-generated />
using System;
using ComputeYourself.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ComputeYourself.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20221214123626_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ComputeYourself.Models.CPU", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Brand")
                        .HasColumnType("int");

                    b.Property<float>("CoreClock")
                        .HasColumnType("real");

                    b.Property<int>("Cores")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Igpu")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("L3Cache")
                        .HasColumnType("int");

                    b.Property<bool>("ManufacturerCooler")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<float>("Rating")
                        .HasColumnType("real");

                    b.Property<int>("Socket")
                        .HasColumnType("int");

                    b.Property<int>("TDP")
                        .HasColumnType("int");

                    b.Property<int>("Threads")
                        .HasColumnType("int");

                    b.Property<int>("TotalCache")
                        .HasColumnType("int");

                    b.Property<float>("TurboCoreClock")
                        .HasColumnType("real");

                    b.Property<int>("Warranty")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Cpus");
                });

            modelBuilder.Entity("ComputeYourself.Models.CpuCooler", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Brand")
                        .HasColumnType("int");

                    b.Property<int>("CoolerType")
                        .HasColumnType("int");

                    b.Property<int>("CpuType")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Height")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<float>("Rating")
                        .HasColumnType("real");

                    b.Property<int>("Warranty")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("CpuCoolers");
                });

            modelBuilder.Entity("ComputeYourself.Models.Drive", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Brand")
                        .HasColumnType("int");

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<int>("ConnectionType")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MaxRead")
                        .HasColumnType("int");

                    b.Property<int>("MaxWrite")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<float>("Rating")
                        .HasColumnType("real");

                    b.Property<int>("Warranty")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Drives");
                });

            modelBuilder.Entity("ComputeYourself.Models.GPU", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Brand")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Length")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<float>("Rating")
                        .HasColumnType("real");

                    b.Property<int>("RequiredPSU")
                        .HasColumnType("int");

                    b.Property<int>("VideoChipset")
                        .HasColumnType("int");

                    b.Property<int>("VramSize")
                        .HasColumnType("int");

                    b.Property<int>("VramType")
                        .HasColumnType("int");

                    b.Property<int>("Warranty")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Gpus");
                });

            modelBuilder.Entity("ComputeYourself.Models.Media", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CPUId")
                        .HasColumnType("int");

                    b.Property<int?>("CpuCoolerId")
                        .HasColumnType("int");

                    b.Property<int?>("DriveId")
                        .HasColumnType("int");

                    b.Property<int?>("GPUId")
                        .HasColumnType("int");

                    b.Property<string>("MediaURL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MotherBoardId")
                        .HasColumnType("int");

                    b.Property<int?>("PSUId")
                        .HasColumnType("int");

                    b.Property<int?>("PcCaseId")
                        .HasColumnType("int");

                    b.Property<int?>("RAMId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CPUId");

                    b.HasIndex("CpuCoolerId");

                    b.HasIndex("DriveId");

                    b.HasIndex("GPUId");

                    b.HasIndex("MotherBoardId");

                    b.HasIndex("PSUId");

                    b.HasIndex("PcCaseId");

                    b.HasIndex("RAMId");

                    b.ToTable("Media");
                });

            modelBuilder.Entity("ComputeYourself.Models.MotherBoard", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Bluetooth")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Brand")
                        .HasColumnType("int");

                    b.Property<string>("CForSLISupport")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Chipset")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Frequency")
                        .HasColumnType("int");

                    b.Property<string>("Igpu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("LANPort")
                        .HasColumnType("real");

                    b.Property<int>("LanportsNumber")
                        .HasColumnType("int");

                    b.Property<bool>("Lighting")
                        .HasColumnType("bit");

                    b.Property<int>("M2")
                        .HasColumnType("int");

                    b.Property<int>("MaxMemory")
                        .HasColumnType("int");

                    b.Property<int>("MemorySockets")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PCIe16x")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("RAM")
                        .HasColumnType("int");

                    b.Property<float>("Rating")
                        .HasColumnType("real");

                    b.Property<int>("SATA3")
                        .HasColumnType("int");

                    b.Property<int>("Size")
                        .HasColumnType("int");

                    b.Property<int>("Socket")
                        .HasColumnType("int");

                    b.Property<int>("USB2")
                        .HasColumnType("int");

                    b.Property<int>("USB3")
                        .HasColumnType("int");

                    b.Property<int>("USB31")
                        .HasColumnType("int");

                    b.Property<int>("USBC")
                        .HasColumnType("int");

                    b.Property<int>("Warranty")
                        .HasColumnType("int");

                    b.Property<string>("Wifi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Windows11Support")
                        .HasColumnType("bit");

                    b.Property<bool>("XMP")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("MotherBoards");
                });

            modelBuilder.Entity("ComputeYourself.Models.PSU", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Brand")
                        .HasColumnType("int");

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<int?>("Classification")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Modular")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<float>("Rating")
                        .HasColumnType("real");

                    b.Property<int>("Warranty")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Psus");
                });

            modelBuilder.Entity("ComputeYourself.Models.PcCase", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Brand")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MaxCpuCoolerHeight")
                        .HasColumnType("int");

                    b.Property<int>("MaxGpuLength")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<float>("Rating")
                        .HasColumnType("real");

                    b.Property<int>("SizeCompatibility")
                        .HasColumnType("int");

                    b.Property<int>("Warranty")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("PcCases");
                });

            modelBuilder.Entity("ComputeYourself.Models.RAM", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Brand")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Frequency")
                        .HasColumnType("int");

                    b.Property<bool>("HeatSink")
                        .HasColumnType("bit");

                    b.Property<int>("Latency")
                        .HasColumnType("int");

                    b.Property<int>("MemoryType")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<float>("Rating")
                        .HasColumnType("real");

                    b.Property<int>("Size")
                        .HasColumnType("int");

                    b.Property<int>("Warranty")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Rams");
                });

            modelBuilder.Entity("ComputeYourself.Models.Media", b =>
                {
                    b.HasOne("ComputeYourself.Models.CPU", null)
                        .WithMany("Media")
                        .HasForeignKey("CPUId");

                    b.HasOne("ComputeYourself.Models.CpuCooler", null)
                        .WithMany("Media")
                        .HasForeignKey("CpuCoolerId");

                    b.HasOne("ComputeYourself.Models.Drive", null)
                        .WithMany("Media")
                        .HasForeignKey("DriveId");

                    b.HasOne("ComputeYourself.Models.GPU", null)
                        .WithMany("Media")
                        .HasForeignKey("GPUId");

                    b.HasOne("ComputeYourself.Models.MotherBoard", null)
                        .WithMany("Media")
                        .HasForeignKey("MotherBoardId");

                    b.HasOne("ComputeYourself.Models.PSU", null)
                        .WithMany("Media")
                        .HasForeignKey("PSUId");

                    b.HasOne("ComputeYourself.Models.PcCase", null)
                        .WithMany("Media")
                        .HasForeignKey("PcCaseId");

                    b.HasOne("ComputeYourself.Models.RAM", null)
                        .WithMany("Media")
                        .HasForeignKey("RAMId");
                });

            modelBuilder.Entity("ComputeYourself.Models.CPU", b =>
                {
                    b.Navigation("Media");
                });

            modelBuilder.Entity("ComputeYourself.Models.CpuCooler", b =>
                {
                    b.Navigation("Media");
                });

            modelBuilder.Entity("ComputeYourself.Models.Drive", b =>
                {
                    b.Navigation("Media");
                });

            modelBuilder.Entity("ComputeYourself.Models.GPU", b =>
                {
                    b.Navigation("Media");
                });

            modelBuilder.Entity("ComputeYourself.Models.MotherBoard", b =>
                {
                    b.Navigation("Media");
                });

            modelBuilder.Entity("ComputeYourself.Models.PSU", b =>
                {
                    b.Navigation("Media");
                });

            modelBuilder.Entity("ComputeYourself.Models.PcCase", b =>
                {
                    b.Navigation("Media");
                });

            modelBuilder.Entity("ComputeYourself.Models.RAM", b =>
                {
                    b.Navigation("Media");
                });
#pragma warning restore 612, 618
        }
    }
}
