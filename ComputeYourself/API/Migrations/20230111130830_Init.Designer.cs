// <auto-generated />
using System;
using API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ComputeYourself.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230111130830_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ComputeYourself.Models.CPU.Cpu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Brand")
                        .HasColumnType("int");

                    b.Property<float>("CoreClock")
                        .HasColumnType("real");

                    b.Property<int>("Cores")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Igpu")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("L3Cache")
                        .HasColumnType("int");

                    b.Property<bool>("ManufacturerCooler")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18, 6)");

                    b.Property<float>("Rating")
                        .HasColumnType("real");

                    b.Property<int>("Socket")
                        .HasColumnType("int");

                    b.Property<int>("TDP")
                        .HasColumnType("int");

                    b.Property<int>("Threads")
                        .HasColumnType("int");

                    b.Property<int>("TotalCache")
                        .HasColumnType("int");

                    b.Property<float>("TurboCoreClock")
                        .HasColumnType("real");

                    b.Property<int>("Warranty")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Cpus");
                });

            modelBuilder.Entity("ComputeYourself.Models.CPU.Cpu_Media", b =>
                {
                    b.Property<int>("CpuId")
                        .HasColumnType("int");

                    b.Property<int>("MediaId")
                        .HasColumnType("int");

                    b.HasKey("CpuId", "MediaId");

                    b.HasIndex("MediaId");

                    b.ToTable("CpuMedias");
                });

            modelBuilder.Entity("ComputeYourself.Models.CpuCooler.CpuCooler", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Brand")
                        .HasColumnType("int");

                    b.Property<int>("CoolerType")
                        .HasColumnType("int");

                    b.Property<int>("CpuType")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Height")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18, 6)");

                    b.Property<float>("Rating")
                        .HasColumnType("real");

                    b.Property<int>("Warranty")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("CpuCoolers");
                });

            modelBuilder.Entity("ComputeYourself.Models.CpuCooler.CpuCooler_Media", b =>
                {
                    b.Property<int>("CpuCoolerId")
                        .HasColumnType("int");

                    b.Property<int>("MediaId")
                        .HasColumnType("int");

                    b.HasKey("CpuCoolerId", "MediaId");

                    b.HasIndex("MediaId");

                    b.ToTable("CpuCoolerMedias");
                });

            modelBuilder.Entity("ComputeYourself.Models.Drive.Drive", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Brand")
                        .HasColumnType("int");

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<int>("ConnectionType")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MaxRead")
                        .HasColumnType("int");

                    b.Property<int>("MaxWrite")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18, 6)");

                    b.Property<float>("Rating")
                        .HasColumnType("real");

                    b.Property<int>("Warranty")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Drives");
                });

            modelBuilder.Entity("ComputeYourself.Models.Drive.Drive_Media", b =>
                {
                    b.Property<int>("DriveId")
                        .HasColumnType("int");

                    b.Property<int>("MediaId")
                        .HasColumnType("int");

                    b.HasKey("DriveId", "MediaId");

                    b.HasIndex("MediaId");

                    b.ToTable("DriveMedias");
                });

            modelBuilder.Entity("ComputeYourself.Models.GPU.Gpu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Brand")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Length")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18, 6)");

                    b.Property<float>("Rating")
                        .HasColumnType("real");

                    b.Property<int>("RequiredPSU")
                        .HasColumnType("int");

                    b.Property<int>("VideoChipset")
                        .HasColumnType("int");

                    b.Property<int>("VramSize")
                        .HasColumnType("int");

                    b.Property<int>("VramType")
                        .HasColumnType("int");

                    b.Property<int>("Warranty")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Gpus");
                });

            modelBuilder.Entity("ComputeYourself.Models.GPU.Gpu_Media", b =>
                {
                    b.Property<int>("GpuId")
                        .HasColumnType("int");

                    b.Property<int>("MediaId")
                        .HasColumnType("int");

                    b.HasKey("GpuId", "MediaId");

                    b.HasIndex("MediaId");

                    b.ToTable("GpuMedias");
                });

            modelBuilder.Entity("ComputeYourself.Models.Media", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("MediaURL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Medias");
                });

            modelBuilder.Entity("ComputeYourself.Models.MotherBoard.MotherBoard", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Bluetooth")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Brand")
                        .HasColumnType("int");

                    b.Property<string>("CForSLISupport")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Chipset")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Frequency")
                        .HasColumnType("int");

                    b.Property<string>("Igpu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LANPort")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LanportsNumber")
                        .HasColumnType("int");

                    b.Property<bool>("Lighting")
                        .HasColumnType("bit");

                    b.Property<int>("M2")
                        .HasColumnType("int");

                    b.Property<int>("MaxMemory")
                        .HasColumnType("int");

                    b.Property<int>("MemorySockets")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PCIe16x")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18, 6)");

                    b.Property<int>("RAM")
                        .HasColumnType("int");

                    b.Property<float>("Rating")
                        .HasColumnType("real");

                    b.Property<int>("SATA3")
                        .HasColumnType("int");

                    b.Property<int>("Size")
                        .HasColumnType("int");

                    b.Property<int>("Socket")
                        .HasColumnType("int");

                    b.Property<int>("USB2")
                        .HasColumnType("int");

                    b.Property<int>("USB3")
                        .HasColumnType("int");

                    b.Property<int>("USB31")
                        .HasColumnType("int");

                    b.Property<int>("USBC")
                        .HasColumnType("int");

                    b.Property<int>("Warranty")
                        .HasColumnType("int");

                    b.Property<string>("Wifi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Windows11Support")
                        .HasColumnType("bit");

                    b.Property<bool>("XMP")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("MotherBoards");
                });

            modelBuilder.Entity("ComputeYourself.Models.MotherBoard.MotherBoard_Media", b =>
                {
                    b.Property<int>("MotherBoardId")
                        .HasColumnType("int");

                    b.Property<int>("MediaId")
                        .HasColumnType("int");

                    b.HasKey("MotherBoardId", "MediaId");

                    b.HasIndex("MediaId");

                    b.ToTable("MotherBoardMedias");
                });

            modelBuilder.Entity("ComputeYourself.Models.PSU.Psu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Brand")
                        .HasColumnType("int");

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<int>("Classification")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Modular")
                        .IsRequired()
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18, 6)");

                    b.Property<float>("Rating")
                        .HasColumnType("real");

                    b.Property<int>("Warranty")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Psus");
                });

            modelBuilder.Entity("ComputeYourself.Models.PSU.Psu_Media", b =>
                {
                    b.Property<int>("PsuId")
                        .HasColumnType("int");

                    b.Property<int>("MediaId")
                        .HasColumnType("int");

                    b.HasKey("PsuId", "MediaId");

                    b.HasIndex("MediaId");

                    b.ToTable("PsuMedias");
                });

            modelBuilder.Entity("ComputeYourself.Models.PcCase.PcCase", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Brand")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MaxCpuCoolerHeight")
                        .HasColumnType("int");

                    b.Property<int>("MaxGpuLength")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18, 6)");

                    b.Property<float>("Rating")
                        .HasColumnType("real");

                    b.Property<int>("SizeCompatibility")
                        .HasColumnType("int");

                    b.Property<int>("Warranty")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("PcCases");
                });

            modelBuilder.Entity("ComputeYourself.Models.PcCase.PcCase_Media", b =>
                {
                    b.Property<int>("PcCaseId")
                        .HasColumnType("int");

                    b.Property<int>("MediaId")
                        .HasColumnType("int");

                    b.HasKey("PcCaseId", "MediaId");

                    b.HasIndex("MediaId");

                    b.ToTable("PcCaseMedias");
                });

            modelBuilder.Entity("ComputeYourself.Models.RAM.Ram", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Brand")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Frequency")
                        .HasColumnType("int");

                    b.Property<bool>("HeatSink")
                        .HasColumnType("bit");

                    b.Property<int>("Latency")
                        .HasColumnType("int");

                    b.Property<int>("MemoryType")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18, 6)");

                    b.Property<float>("Rating")
                        .HasColumnType("real");

                    b.Property<int>("Size")
                        .HasColumnType("int");

                    b.Property<int>("Warranty")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Rams");
                });

            modelBuilder.Entity("ComputeYourself.Models.RAM.Ram_Media", b =>
                {
                    b.Property<int>("RamId")
                        .HasColumnType("int");

                    b.Property<int>("MediaId")
                        .HasColumnType("int");

                    b.HasKey("RamId", "MediaId");

                    b.HasIndex("MediaId");

                    b.ToTable("RamMedias");
                });

            modelBuilder.Entity("ComputeYourself.Models.CPU.Cpu_Media", b =>
                {
                    b.HasOne("ComputeYourself.Models.CPU.Cpu", "Cpu")
                        .WithMany("Cpu_Medias")
                        .HasForeignKey("CpuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ComputeYourself.Models.Media", "Media")
                        .WithMany("Cpu_Medias")
                        .HasForeignKey("MediaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cpu");

                    b.Navigation("Media");
                });

            modelBuilder.Entity("ComputeYourself.Models.CpuCooler.CpuCooler_Media", b =>
                {
                    b.HasOne("ComputeYourself.Models.CpuCooler.CpuCooler", "Cpucooler")
                        .WithMany("CpuCooler_Medias")
                        .HasForeignKey("CpuCoolerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ComputeYourself.Models.Media", "Media")
                        .WithMany("CpuCooler_Medias")
                        .HasForeignKey("MediaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cpucooler");

                    b.Navigation("Media");
                });

            modelBuilder.Entity("ComputeYourself.Models.Drive.Drive_Media", b =>
                {
                    b.HasOne("ComputeYourself.Models.Drive.Drive", "Drive")
                        .WithMany("Drive_Medias")
                        .HasForeignKey("DriveId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ComputeYourself.Models.Media", "Media")
                        .WithMany("Drive_Medias")
                        .HasForeignKey("MediaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Drive");

                    b.Navigation("Media");
                });

            modelBuilder.Entity("ComputeYourself.Models.GPU.Gpu_Media", b =>
                {
                    b.HasOne("ComputeYourself.Models.GPU.Gpu", "Gpu")
                        .WithMany("Gpu_Medias")
                        .HasForeignKey("GpuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ComputeYourself.Models.Media", "Media")
                        .WithMany("Gpu_Medias")
                        .HasForeignKey("MediaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Gpu");

                    b.Navigation("Media");
                });

            modelBuilder.Entity("ComputeYourself.Models.MotherBoard.MotherBoard_Media", b =>
                {
                    b.HasOne("ComputeYourself.Models.Media", "Media")
                        .WithMany("MotherBoard_Medias")
                        .HasForeignKey("MediaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ComputeYourself.Models.MotherBoard.MotherBoard", "MotherBoard")
                        .WithMany("MotherBoard_Medias")
                        .HasForeignKey("MotherBoardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Media");

                    b.Navigation("MotherBoard");
                });

            modelBuilder.Entity("ComputeYourself.Models.PSU.Psu_Media", b =>
                {
                    b.HasOne("ComputeYourself.Models.Media", "Media")
                        .WithMany("Psu_Medias")
                        .HasForeignKey("MediaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ComputeYourself.Models.PSU.Psu", "Psu")
                        .WithMany("Psu_Medias")
                        .HasForeignKey("PsuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Media");

                    b.Navigation("Psu");
                });

            modelBuilder.Entity("ComputeYourself.Models.PcCase.PcCase_Media", b =>
                {
                    b.HasOne("ComputeYourself.Models.Media", "Media")
                        .WithMany("PcCaseMedias")
                        .HasForeignKey("MediaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ComputeYourself.Models.PcCase.PcCase", "PcCase")
                        .WithMany("PcCaseMedias")
                        .HasForeignKey("PcCaseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Media");

                    b.Navigation("PcCase");
                });

            modelBuilder.Entity("ComputeYourself.Models.RAM.Ram_Media", b =>
                {
                    b.HasOne("ComputeYourself.Models.Media", "Media")
                        .WithMany("Ram_Medias")
                        .HasForeignKey("MediaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ComputeYourself.Models.RAM.Ram", "Ram")
                        .WithMany("Ram_Medias")
                        .HasForeignKey("RamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Media");

                    b.Navigation("Ram");
                });

            modelBuilder.Entity("ComputeYourself.Models.CPU.Cpu", b =>
                {
                    b.Navigation("Cpu_Medias");
                });

            modelBuilder.Entity("ComputeYourself.Models.CpuCooler.CpuCooler", b =>
                {
                    b.Navigation("CpuCooler_Medias");
                });

            modelBuilder.Entity("ComputeYourself.Models.Drive.Drive", b =>
                {
                    b.Navigation("Drive_Medias");
                });

            modelBuilder.Entity("ComputeYourself.Models.GPU.Gpu", b =>
                {
                    b.Navigation("Gpu_Medias");
                });

            modelBuilder.Entity("ComputeYourself.Models.Media", b =>
                {
                    b.Navigation("CpuCooler_Medias");

                    b.Navigation("Cpu_Medias");

                    b.Navigation("Drive_Medias");

                    b.Navigation("Gpu_Medias");

                    b.Navigation("MotherBoard_Medias");

                    b.Navigation("PcCaseMedias");

                    b.Navigation("Psu_Medias");

                    b.Navigation("Ram_Medias");
                });

            modelBuilder.Entity("ComputeYourself.Models.MotherBoard.MotherBoard", b =>
                {
                    b.Navigation("MotherBoard_Medias");
                });

            modelBuilder.Entity("ComputeYourself.Models.PSU.Psu", b =>
                {
                    b.Navigation("Psu_Medias");
                });

            modelBuilder.Entity("ComputeYourself.Models.PcCase.PcCase", b =>
                {
                    b.Navigation("PcCaseMedias");
                });

            modelBuilder.Entity("ComputeYourself.Models.RAM.Ram", b =>
                {
                    b.Navigation("Ram_Medias");
                });
#pragma warning restore 612, 618
        }
    }
}
